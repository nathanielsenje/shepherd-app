version: '3.8'

services:
  # PostgreSQL Database with extensions
  postgres:
    image: postgres:15-alpine
    container_name: shepherd_postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shepherd_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d shepherd_db']
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgREST API
  rest:
    image: postgrest/postgrest:v12.0.2
    container_name: shepherd_rest
    restart: unless-stopped
    ports:
      - '8000:3000'
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/shepherd_db
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: postgres
      PGRST_JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PGRST_DB_USE_LEGACY_GUCS: 'false'
      PGRST_APP_SETTINGS_JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PGRST_APP_SETTINGS_JWT_EXP: 3600
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: '*'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'wget --quiet --tries=1 --spider http://localhost:3000/ || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5

  # Supabase pg-meta - Database metadata service
  meta:
    image: supabase/postgres-meta:v0.68.0
    container_name: shepherd_meta
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      PG_META_PORT: 8080
      PG_META_DB_HOST: postgres
      PG_META_DB_PORT: 5432
      PG_META_DB_NAME: shepherd_db
      PG_META_DB_USER: postgres
      PG_META_DB_PASSWORD: postgres
    depends_on:
      postgres:
        condition: service_healthy

  # Supabase Studio - Database Management UI
  studio:
    image: supabase/studio:20240729-ce42139
    container_name: shepherd_studio
    restart: unless-stopped
    ports:
      - '3010:3000'
    environment:
      SUPABASE_URL: http://rest:3000
      SUPABASE_PUBLIC_URL: http://localhost:8000
      SUPABASE_ANON_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      SUPABASE_SERVICE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      POSTGRES_PASSWORD: postgres
      STUDIO_PG_META_URL: http://meta:8080
    depends_on:
      - postgres
      - rest
      - meta

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: shepherd_redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
